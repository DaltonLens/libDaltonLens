name: CMake Build and Test

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest

    env:
      DISPLAY: :99
      # Avoid apt-get questions
      DEBIAN_FRONTEND: noninteractive

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true

    - name: Install Ninja
      id: ninja
      uses: turtlesec-no/get-ninja@main

    - name: Ninja version
      run: echo "${{ steps.ninja.outputs.version }}"

    # Only for act
    - name: <ACT> Install sudo package
      if: env.ACT=='true' && matrix.os == 'ubuntu-latest'
      run: apt update && apt install sudo

    - name: <Windows> Setup devcmd
      if: matrix.os == 'windows-latest'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target all

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest --verbose -C ${{env.BUILD_TYPE}}
